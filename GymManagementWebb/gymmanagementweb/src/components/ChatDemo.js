import React, { useContext } from 'react';
import { Container, Row, Col, Card, Button, Alert } from 'react-bootstrap';
import { MyUserContext } from '../contexts/Contexts';
import { useChat } from '../contexts/ChatContext';

const ChatDemo = () => {
  const user = useContext(MyUserContext);
  const { openChat, startNewConversation, conversations, unreadCount } = useChat();

  if (!user) {
    return (
      <Container className="mt-5">
        <Alert variant="warning">
          B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ s·ª≠ d·ª•ng t√≠nh nƒÉng chat.
        </Alert>
      </Container>
    );
  }

  const handleStartSupportChat = () => {
    const supportUser = {
      id: 'support',
      name: user.userRole === 'ROLE_MEMBER' ? 'H·ªó tr·ª£ kh√°ch h√†ng' : 'H·ªó tr·ª£ nh√¢n vi√™n',
      role: 'ROLE_MANAGER',
      isSupport: true
    };
    startNewConversation(supportUser);
  };

  const handleStartDemoChat = () => {
    const demoUser = {
      id: 'demo_user',
      name: 'Demo User',
      role: user.userRole === 'ROLE_MEMBER' ? 'ROLE_TRAINER' : 'ROLE_MEMBER',
      isSupport: false
    };
    startNewConversation(demoUser);
  };

  return (
    <Container className="mt-5">
      <Row>
        <Col md={8} className="mx-auto">
          <Card>
            <Card.Header>
              <h4>üî• Chat System Demo</h4>
            </Card.Header>
            <Card.Body>
              <div className="mb-4">
                <h5>Th√¥ng tin ng∆∞·ªùi d√πng:</h5>
                <p><strong>T√™n:</strong> {user.username}</p>
                <p><strong>Vai tr√≤:</strong> {user.userRole}</p>
                <p><strong>ID:</strong> {user.id}</p>
              </div>

              <div className="mb-4">
                <h5>Tr·∫°ng th√°i Chat:</h5>
                <p><strong>S·ªë cu·ªôc tr√≤ chuy·ªán:</strong> {conversations.length}</p>
                <p><strong>Tin nh·∫Øn ch∆∞a ƒë·ªçc:</strong>
                  <span className={`ms-2 badge ${unreadCount > 0 ? 'bg-danger' : 'bg-secondary'}`}>
                    {unreadCount}
                  </span>
                </p>
              </div>

              <div className="mb-4">
                <h5>H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng:</h5>
                <ol>
                  <li>Nh·∫•n v√†o n√∫t chat ·ªü g√≥c d∆∞·ªõi b√™n ph·∫£i ƒë·ªÉ m·ªü c·ª≠a s·ªï chat</li>
                  <li>Nh·∫•n n√∫t "+" ƒë·ªÉ b·∫Øt ƒë·∫ßu cu·ªôc tr√≤ chuy·ªán m·ªõi</li>
                  <li>Ch·ªçn ng∆∞·ªùi mu·ªën chat ho·∫∑c g·ª≠i y√™u c·∫ßu h·ªó tr·ª£</li>
                  <li>G√µ tin nh·∫Øn v√† nh·∫•n Enter ho·∫∑c n√∫t g·ª≠i</li>
                  <li>S·ª≠ d·ª•ng emoji picker ƒë·ªÉ th√™m bi·ªÉu t∆∞·ª£ng c·∫£m x√∫c</li>
                  <li>Nh·∫≠n th√¥ng b√°o khi c√≥ tin nh·∫Øn m·ªõi</li>
                </ol>
              </div>

              <div className="d-grid gap-2">
                <Button
                  variant="primary"
                  onClick={openChat}
                  size="lg"
                >
                  üöÄ M·ªü Chat
                </Button>

                <Button
                  variant="success"
                  onClick={handleStartSupportChat}
                  size="lg"
                >
                  üí¨ Chat v·ªõi H·ªó tr·ª£
                </Button>

                <Button
                  variant="info"
                  onClick={handleStartDemoChat}
                  size="lg"
                >
                  üéÆ Demo Chat
                </Button>
              </div>

              <div className="mt-4">
                <Alert variant="info">
                  <h6>üí° T√≠nh nƒÉng Chat:</h6>
                  <ul className="mb-0">
                    <li>‚úÖ Realtime messaging v·ªõi Firebase</li>
                    <li>‚úÖ Giao di·ªán gi·ªëng Messenger</li>
                    <li>‚úÖ Th√¥ng b√°o tin nh·∫Øn m·ªõi</li>
                    <li>‚úÖ Emoji picker</li>
                    <li>‚úÖ Auto-scroll tin nh·∫Øn</li>
                    <li>‚úÖ Responsive design</li>
                    <li>‚úÖ Support chat cho member/trainer ‚Üí manager</li>
                    <li>‚úÖ Chat gi·ªØa member ‚Üî trainer</li>
                  </ul>
                </Alert>
              </div>

              {conversations.length > 0 && (
                <div className="mt-4">
                  <h6>Cu·ªôc tr√≤ chuy·ªán hi·ªán t·∫°i:</h6>
                  {conversations.map((conv, index) => (
                    <div key={conv.id} className="border rounded p-2 mb-2">
                      <small className="text-muted">ID: {conv.id}</small>
                      <br />
                      <small>Tin nh·∫Øn cu·ªëi: {conv.lastMessage || 'Ch∆∞a c√≥ tin nh·∫Øn'}</small>
                    </div>
                  ))}
                </div>
              )}
            </Card.Body>
          </Card>
        </Col>
      </Row>
    </Container>
  );
};

export default ChatDemo;
